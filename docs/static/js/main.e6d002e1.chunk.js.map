{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GridImage.js","hooks/useFetchGifts.js","GiftApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GridImage","loading","state","setState","useEffect","then","useFetchGifts","key","GiftApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAgBhD,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACGJ,EAAYK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAMd,4CAEA,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAe,SAAC,GAAwB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IACtC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAOf,EAAMgB,IAAON,IACzB,+BAAMA,EAAN,OCDG,SAASO,EAAT,GAAkC,IAAbnB,EAAY,EAAZA,SAAY,ECHlB,SAAEA,GAAe,IAAD,EAChBd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH6B,mBACnCC,EADmC,KAC5BC,EAD4B,KAU1C,OAJIC,qBAAW,WACXxB,EAASC,GAAWwB,MAAM,SAAAd,GAAG,OAAIY,EAAS,CAAEf,KAAMG,EAAKU,SAAS,SACjE,CAAEpB,IAEEqB,EDL2BI,CAAezB,GAAnCa,EAF8B,EAEpCN,KAAca,EAFsB,EAEtBA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,eAEb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAEZ,OAAO,kBAAC,EAAD,eAAcgB,IAAMhB,EAAIC,IAAUD,SEd7D,IAkCeiB,EAlCC,SAAAC,GAAS,MAGe1C,mBAAS,CAAC,cAHzB,mBAGd2C,EAHc,KAGF5C,EAHE,KAUrB,OACI,oCACI,wCACA,6BAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAACmB,EAAD,CACIO,IAAM1B,EACNA,SAAWA,UCtBvC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.e6d002e1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if ( inputValue .trim().length > 3 ) {\r\n            setCategories( cate => [ inputValue, ...cate]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h2>Add Category</h2>\r\n\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=r93BLQbwyHaXRj4cDlPYoMiNjUE64uHn`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return { \r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ( {id, title, url } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src= { url } alt= { title }></img>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useEffect, useState } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts'\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport default function GridImage({ category }) {\r\n\r\n    const { data: images, loading } = useFetchGifts( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>  \r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => { \r\n                    // return <li key= { id } > { title } </li> }) \r\n                    return <GiftGridItem key={ img.id } { ...img }/>\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )   \r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifts';\r\nexport const  useFetchGifts = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n        useEffect( () => {\r\n        getGifs( category ).then( img => setState({ data: img, loading: false }) );\r\n    }, [ category ]); // mandar llamar la funcion getGifs solo al renderizar por primera vez\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport GridImage from './components/GridImage'\r\n\r\nconst GiftApp = props => {\r\n\r\n    // const categories = ['One punch', 'Samuray X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n        // setCategories( [...categories, 'HunterXHunter'] ) // Agregar un elemento manteniendo las actuales, spread.\r\n       // setCategories( cate => [...cate, 'HunterHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Gift App</h2>\r\n            <hr></hr>\r\n\r\n            <AddCategory setCategories={ setCategories }/>\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        <GridImage \r\n                            key={ category }\r\n                            category={ category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nGiftApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GiftApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftApp from './GiftApp';\n\nReactDOM.render(\n    <GiftApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}